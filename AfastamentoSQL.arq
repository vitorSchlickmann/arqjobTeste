//Revisado em: 17/07/2020 Desenvolvedor: Carlos Eduardo Elias Inocencio #:FOL-18009
//Revisado em: 07/08/2020 Desenvolvedor: Marco Antonio Tancredo #:FOL-18492
//Revisado em: 24/03/2021 Desenvolvedor: Carlos Eduardo Elias #:FOL-23779
//Revisado em: 06/04/2021 Desenvolvedor: Carlos Eduardo Elias & Marco Antonio Tancredo #:FOL-24079
//Revisado em: 27/01/2022 Desenvolvedor: Diego Reis #:DC-4026


//parâmetros obrigatórios para ArqJoblets genéricos
Alfa @gaTipoRegistro, @gaDescTipoRegistro, @gaUrlServico, @gaUrlConsultaLote, @gaToken, @gaJsonRegistro, @gaIntegracao, @gaMensagem_erro, @gaMensagem_ajuda, @gaIdGerado,
     @gaChaveDsk1, @gaChaveDsk2, @gaChaveDsk3, @gaChaveDsk4, @gaChaveDsk5, @gaChaveDsk6, @gaChaveDsk7, 
     @gaChaveDsk8, @gaChaveDsk9, @gaChaveDsk10, @gaChaveDsk11, @gaChaveDsk12;
Inteiro @giSistema, @giSituacaoReg, @giPaginaErro, @giNewOffset;

//variável de controle Interno
Alfa @gaRetorno, @gaIdLote, @gaConexao, @gaPreValidar, @gaUrlDominio, @gaUrlDominioLote, @gaContexto, @gaContextoLote;
Inteiro @giQtdRegistrosLote, @giRetorno, @giISeqLote, @giExerc; 
Boleana @gbTemErroRegistro, @gbTemErroMigracao, @gbTemLotePendente, @gbTemErroServico, @gbVetorIni, @gbEhUltimoRegistro, @gbEhRedeBetha;

//variável de controle do produto
Alfa @gaSql, @gaEntidades;
Alfa laSql;

@gaTipoRegistro = "afastamento";
@gaDescTipoRegistro = "Cadastro de Afastamento";

exeArqjoblet("300/Migração Betha Folha/configuracaoServico");

se verParametro("Entidade(s)")
    @gaEntidades = alfa(retParametro("Entidade(s)",true,"")); 
    @gaEntidades = trocaAlfa(@gaEntidades, "." , ",");
fimse;

laSql =  "select 300 as sistema, 
                 '" + @gaTipoRegistro + "' as tipo_registro,
                 chave_dsk1 = 'afastamento',
                 chave_dsk2 = afastamentos.i_entidades,
                 chave_dsk3 = bethadba.dbf_get_id_gerado(sistema, 'matricula', afastamentos.i_entidades, afastamentos.i_funcionarios),
                 chave_dsk4 = afastamentos.dt_afastamento,
                 data_aposentadoria = (select afast.dt_afastamento
                                         from bethadba.afastamentos afast
                                        where afast.i_entidades = afastamentos.i_entidades and 
                                              afast.i_funcionarios = afastamentos.i_funcionarios and 
                                              afast.i_tipos_afast = (select tipos_afast.i_tipos_afast
                                                                       from bethadba.tipos_afast 
                                                                      where tipos_afast.i_tipos_afast = afast.i_tipos_afast and 
                                                                            tipos_afast.classif = 9)),
                 id = bethadba.dbf_get_id_gerado(sistema , tipo_registro , chave_dsk1, chave_dsk2 , chave_dsk3, chave_dsk4 ) ,
                 tipoAfastamento = bethadba.dbf_get_id_gerado(sistema, 'tipo-afastamento', afastamentos.i_tipos_afast),
                 ato = bethadba.dbf_get_id_gerado(sistema, 'ato', isnull(afastamentos.i_atos,0)),
                 afastamentoOrigem = cast((select isnull(bethadba.dbf_get_id_gerado(sistema, 'afastamento', a.i_entidades, chave_dsk2, a.dt_afastamento), 0)
                                             from bethadba.afastamentos a
                                            where a.dt_afastamento = afastamentos.dt_afastamento_origem
                                              and a.i_entidades = afastamentos.i_entidades
                                              and a.i_funcionarios = afastamentos.i_funcionarios) as int),
                 inicioAfastamento = afastamentos.dt_afastamento,
                 fimAfastamento = dateformat(afastamentos.dt_ultimo_dia,'yyyy-mm-dd') ,
                 retornoTrabalho = ifnull(afastamentos.dt_ultimo_dia, null, string(date(days(afastamentos.dt_ultimo_dia,1)))),
                 quantidade = ifnull(afastamentos.dt_ultimo_dia, null, days(afastamentos.dt_afastamento, retornoTrabalho)),
                 unidade = 'DIAS',
                 decorrente = if tipos_afast.classif in(3,6,10,11,12,13,14,15,17) then
                                 'ACIDENTE_DOENCA'
                              else if tipos_afast.classif in (2,4,5,7,16,18,19,20,21) then
                                 'LICENCA'
                              else if tipos_afast.classif in (8,9) then
                                 'RESCISAO'
                              endif endif endif,    
                 motivo = afastamentos.observacao,
                 funcionario = funcionarios.i_funcionarios,
                 descontar = null,
competenciaDesconto= null,
abonar = null
            from bethadba.afastamentos join bethadba.tipos_afast,
                 bethadba.funcionarios
           where funcionarios.i_funcionarios between 2057 and 2556
             and chave_dsk3 is not null
             and afastamentos.i_entidades = funcionarios.i_entidades
             and afastamentos.i_funcionarios = funcionarios.i_funcionarios
             and funcionarios.tipo_func = 'F'
             and (data_aposentadoria is null or (data_aposentadoria is not null and dt_afastamento <= data_aposentadoria))
             and afastamentos.i_entidades in (" + @gaEntidades + ") #clausulaWhere# 
             
UNION ALL

select  300 as sistema, 
        '" + @gaTipoRegistro + "' as tipo_registro,
        chave_dsk1 = 'afastamento', 
        chave_dsk2 = faltas.i_entidades,
        chave_dsk3 = bethadba.dbf_get_id_gerado(sistema,'matricula', faltas.i_entidades , faltas.i_funcionarios),
        chave_dsk4 = faltas.dt_inicial,
        data_aposentadoria = (select afast.dt_afastamento
                                 from bethadba.afastamentos afast
                                where afast.i_entidades = faltas.i_entidades and 
                                      afast.i_funcionarios = faltas.i_funcionarios and 
                                      afast.i_tipos_afast = (select tipos_afast.i_tipos_afast
                                                               from bethadba.tipos_afast 
                                                              where tipos_afast.i_tipos_afast = afast.i_tipos_afast and 
                                                                    tipos_afast.classif = 9)),
        id = bethadba.dbf_get_id_gerado(sistema , tipo_registro , chave_dsk1, chave_dsk2 , chave_dsk3, chave_dsk4),
        tipoAfastamento = bethadba.dbf_get_id_gerado(sistema,'tipo-afastamento', i_motivos_faltas||'FALTA'),
    
        ato = null,
        afastamentoOrigem = null,
        inicioAfastamento = faltas.dt_inicial,
        fimAfastamento =if faltas.tipo_faltas in(1) then dateformat(faltas.dt_inicial+faltas.qtd_faltas,'yyyy-mm-dd')  else dateformat(faltas.dt_inicial,'yyyy-mm-dd') endif,
        retornoTrabalho = fimAfastamento,
        quantidade = faltas.qtd_faltas,
        unidade = if faltas.tipo_faltas in(1) then
                                 'DIAS'
                              else 'HORAS'
endif,
        decorrente = 'FALTAS',
        motivo = null,
        funcionario = funcionarios.i_funcionarios,
         descontar = if faltas.tipo_descto in (1) then
                                 'false'
                              else 'true'
endif,
competenciaDesconto = if descontar = 'true' then 
							if isnull(left(comp_descto,7),null) is null then
							   isnull(left(chave_dsk4,7),null)
							else
							   isnull(left(comp_descto,7),null)
							endif
					  else
					  	 null
					  endif,
abonar = 'false'
   from bethadba.funcionarios,
        bethadba.faltas           
   where faltas.i_funcionarios between 2057 and 2556
        and chave_dsk3 is not null
        and funcionarios.i_funcionarios = faltas.i_funcionarios
        and funcionarios.i_entidades = faltas.i_entidades
        and funcionarios.tipo_func in ('F','A')             
        and (data_aposentadoria is null or (data_aposentadoria is not null and faltas.dt_inicial <= data_aposentadoria))
        and (faltas.dt_inicial <> '1900-01-01' and faltas.dt_inicial <> '1900-01-01') 
        and exists(select i_funcionarios from bethadba.faltas f where f.i_funcionarios = funcionarios.i_funcionarios and f.i_entidades = funcionarios.i_entidades) 
       and funcionarios.i_entidades in (" + @gaEntidades + ") #clausulaWhere#
       
   UNION ALL
    
select  300 as sistema, 
        '" + @gaTipoRegistro + "' as tipo_registro,
        chave_dsk1 = 'afastamento', 
        chave_dsk2 = ferias.i_entidades,
        chave_dsk3 = bethadba.dbf_get_id_gerado(sistema,'matricula', ferias.i_entidades , ferias.i_funcionarios),
        chave_dsk4 = ferias.dt_gozo_ini,
        data_aposentadoria = (select afast.dt_afastamento
                                 from bethadba.afastamentos afast
                                where afast.i_entidades = ferias.i_entidades and 
                                      afast.i_funcionarios = ferias.i_funcionarios and 
                                      afast.i_tipos_afast = (select tipos_afast.i_tipos_afast
                                                               from bethadba.tipos_afast 
                                                              where tipos_afast.i_tipos_afast = afast.i_tipos_afast and 
                                                                    tipos_afast.classif = 9)),
        id = bethadba.dbf_get_id_gerado(sistema , tipo_registro , chave_dsk1, chave_dsk2 , chave_dsk3, chave_dsk4),
        tipoAfastamento = bethadba.dbf_get_id_gerado(sistema,'tipo-afastamento', '1FERIAS'),
        ato = bethadba.dbf_get_id_gerado(sistema, 'ato', isnull(ferias.i_atos,0)),
        afastamentoOrigem = null,
        inicioAfastamento = ferias.dt_gozo_ini,
        fimAfastamento = dateformat(ferias.dt_gozo_fin,'yyyy-mm-dd'),
        retornoTrabalho = ifnull(ferias.dt_gozo_fin, null, string(date(days(ferias.dt_gozo_fin,1)))),
        quantidade = ifnull(ferias.dt_gozo_fin, null, days(ferias.dt_gozo_ini, retornoTrabalho)),
        unidade = 'DIAS',
        decorrente = 'FERIAS',
        motivo = null,
        funcionario = funcionarios.i_funcionarios,
        descontar = null,
competenciaDesconto= null,
abonar = null
   from bethadba.funcionarios,
        bethadba.ferias           
   where ferias.i_funcionarios between 2057 and 2556
        and chave_dsk3 is not null
        and funcionarios.i_funcionarios = ferias.i_funcionarios
        and funcionarios.i_entidades = ferias.i_entidades
        and funcionarios.tipo_func in ('F','A')               
        and (data_aposentadoria is null or (data_aposentadoria is not null and ferias.dt_gozo_ini <= data_aposentadoria))
        and (ferias.dt_gozo_ini <> '1900-01-01' and ferias.dt_gozo_fin <> '1900-01-01') 
        and exists(select i_funcionarios from bethadba.ferias f where f.i_funcionarios = funcionarios.i_funcionarios and f.i_entidades = funcionarios.i_entidades) 
        and funcionarios.i_entidades  in (" + @gaEntidades + ") #clausulaWhere# ";           

@gaDescTipoRegistro = "Cadastro de Afastamento sem Afastamento de Origem";
exeArqjoblet("103/Migração Betha/limpa_chaves");
@gaSql = laSql + " and afastamentoOrigem is null";
exeArqjoblet("300/Migração Betha Folha/AfastamentoJSON");

@gaDescTipoRegistro = "Cadastro de Afastamento com Afastamento de Origem";
exeArqjoblet("103/Migração Betha/limpa_chaves");
@gaSql = laSql + " and afastamentoOrigem is not null";
exeArqjoblet("300/Migração Betha Folha/AfastamentoJSON");